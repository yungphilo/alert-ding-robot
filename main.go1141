package main

import (
	"encoding/json"
	"fmt"
	"net/http"
	"os"
	"strings"

	"gopkg.in/yaml.v2"
)

//	type Config struct {
//		PrometheusURL   string        `yaml:"prometheus_url"`
//		DingTalkWebhook string        `yaml:"dingtalk_webhook"`
//		Alerts          []AlertConfig `yaml:"alerts"`
//	}
type Config struct {
	DingTalkMessage *DingTalkMessage `yaml:message`
}
type DingTalkMessage struct {
	MsgType string `yaml:"msgtype"`
	// actionCard map[string]string   `yaml:"actionCard"`
	// At         map[string][]string `yaml:"at"`
	actionCard *actionCard `yaml:"actionCard"`
	At         *At         `yaml:"at"`
}
type actionCard struct {
	title       string `yaml:"title"`
	text        string `yaml:"text"`
	singleTitle string `yaml:"singleTitle"`
	singleURL   string `yaml:"singleURL`
}
type At struct {
	atMobiles string `yaml:"atMobiles"`
	atUserIds string `yaml:"atUserIds"`
	isAtAll   string `yaml:"isAtAll"`
}

func main() {
	// cfg, err:=loadConfig("config.yaml")
	// if err != nil {
	// 	fmt.Printf("Failed to load config file: %s\n", err.Error())
	// 	return
	// }

}
func loadConfig(filename string) (*Config, error) {
	data, err := os.ReadFile(filename)
	if err != nil {
		return nil, err
	}
	var cfg Config
	err = yaml.Unmarshal(data, &cfg)
	if err != nil {
		return nil, err
	}
	return &cfg, nil
}
func sendDingTalkMessage(webhookURL string, message string, DingActionCard []string, atMobiles string) error {
	// 构造钉钉消息内容

	dingTalkMsg := DingTalkMessage{
		MsgType: "actionCard",
		actionCard: DingActionCard{
			title,
			text,
			singleTitle,
			singleURL,
		},
		at: map[string][]string{
			"atMobiles": atMobiles,
			"atUserIds": atUserIds,
			"isAtAll":   isAtAll,
		},
	}

	// 将消息内容转为JSON
	msgData, err := json.Marshal(dingTalkMsg)
	if err != nil {
		return err
	}

	// 发送HTTP POST请求
	resp, err := http.Post(webhookURL, "application/json", strings.NewReader(string(msgData)))
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	// 检查响应状态码
	if resp.StatusCode != http.StatusOK {
		return fmt.Errorf("unexpected response status code: %d", resp.StatusCode)
	}

	return nil
}
